@using KaimGames.Common;
@using KaimGames.VideoPoker.Common;

@model VideoPokerShowViewModel

<h2>Video Poker - Round @Model.Game.Round of @Model.Game.TotalRounds - @Model.Game.Score Points</h2>
<p>@Html.ActionLink("Leaderboard", "Index", "Leaderboard", new { gameName = Model.Game.Name, subGame = Model.Game.SubGame }, null)</p>
<p><a asp-action="Create" asp-controller="VideoPoker" asp-route-handSize="@Model.Game.HandSize" asp-route-totalRounds="@Model.Game.TotalRounds">Restart</a></p>

<h3>
    @if (Model.Game.IsGameOver)
    {
        <span>You finished @Model.Game.TotalRounds rounds with @Model.Game.Score points!</span>
    }
    else if (Model.BestHand == null)
    {
        <span>Select cards to keep</span>
    }
    else
    {
        <span>Your @Model.BestHand.HandName was worth @Model.BestHand.Points points</span>
    }
</h3>

<h4 id="elapsed" class="text-hide">&nbsp;</h4>

<div class="container">
    <form asp-controller="VideoPoker" asp-action="Keep" method="GET">
        <table class="table table-responsive">
            <tbody>
                <tr>
                    @for (int lcv = 0; lcv < Model.Game.HandSize; lcv++)
                    {
                        Card card = Model.Game.CurrentHand.Cards[lcv];
                        <td>
                            <div class="videopoker-card">
                                @if (Model.BestHand == null)
                                {
                                    <img class="img-fluid" src="@card.ImageUrl" onclick="toggle(@lcv)" />
                                    <input name="cardIndexes" id="cardIndexes-@lcv" type="hidden" value="-1">
                                }
                                else if (Model.BestHand.Cards.Any(item => item.ToString() == card.ToString()))
                                {
                                    <img class="img-fluid videopoker-card-used" src="@card.ImageUrl" />
                                }
                                else
                                {
                                    <img class="img-fluid" src="@card.ImageUrl" />
                                }
                            </div>
                        </td>
                    }
                </tr>
                <tr>
                    <td colspan="@Model.Game.HandSize" class="text-center">
                        @if (Model.Game.IsGameOver)
                        {
                            <span>Game over!</span>
                        }
                        else if (Model.BestHand == null)
                        {
                            <button type="submit" class="btn btn-primary btn-lg btn-block">Keep</button>
                        }
                        else if (!Model.Game.IsGameOver)
                        {
                            <a asp-action="Deal" class="btn btn-primary btn-lg btn-block">Deal</a>
                        }
                    </td>
                </tr>
            </tbody>
        </table>
    </form>

    <dl class="row">
        <dt class="col-2">Royal Flush</dt>
        <dd class="col-1">800</dd>
        <dt class="col-2">Straight Flush</dt>
        <dd class="col-1">50</dd>
        <dt class="col-2">4 Of A Kind</dt>
        <dd class="col-1">25</dd>
        <dt class="col-2">Full House</dt>
        <dd class="col-1">9</dd>
        <dt class="col-2">Flush</dt>
        <dd class="col-1">6</dd>
        <dt class="col-2">Straight</dt>
        <dd class="col-1">4</dd>
        <dt class="col-2">3 Of A Kind</dt>
        <dd class="col-1">3</dd>
        <dt class="col-2">Two Pair</dt>
        <dd class="col-1">2</dd>
        <dt class="col-2">Jacks Or Better</dt>
        <dd class="col-1">1</dd>
        <dt class="col-2"><i>Each Deal</i></dt>
        <dd class="col-1"><i>-1</i></dd>
    </dl>
</div>

<div>

</div>

@section Scripts {
    <script type="text/javascript">
        var elapsed = @Model.Elapsed;
        function setElapsed(elapsedTime) {
            $("#elapsed").text((Math.floor(elapsedTime)) / 1000);
        }
        setElapsed(elapsed);

        function toggle(index) {
            var input = $("#cardIndexes-" + index);
            if (input.val() == -1) {
                input.val(index);
                input.parent("div").addClass("videopoker-card-selected");
            }
            else {
                input.val(-1);
                input.parent("div").removeClass("videopoker-card-selected");
            }
        }
    </script>

    @if (!Model.Game.IsGameOver)
    {
        <script type="text/javascript">
            var interval = 20;
            setInterval(function () {
                elapsed += interval;
                setElapsed(elapsed);
            }, interval);
        </script>
    }
}
